diff --git a/include/trace/events/paygo.h b/include/trace/events/paygo.h
new file mode 100644
index 000000000..32c0ef909
--- /dev/null
+++ b/include/trace/events/paygo.h
@@ -0,0 +1,57 @@
+/* SPDX-License-Identifier: GPL-2.0 */
+#undef TRACE_SYSTEM
+#define TRACE_SYSTEM paygo
+
+#if !defined(_TRACE_PAYGO_H) || defined(TRACE_HEADER_MULTI_READ)
+#define _TRACE_PAYGO_H
+
+#include <linux/types.h>
+#include <linux/tracepoint.h>
+#include <linux/mm.h>
+#include <linux/memcontrol.h>
+
+DECLARE_EVENT_CLASS(paygo_operations,
+
+  TP_PROTO(struct folio *folio),
+
+  TP_ARGS(folio),
+
+  TP_STRUCT__entry(
+    __field(unsigned long, pfn)
+    __field(unsigned long, i_ino)
+    __field(unsigned long, index)
+    __field(unsigned char, order)
+  ),
+
+  TP_fast_assign(
+    __entry->pfn = folio_pfn(folio);
+    __entry->i_ino = folio->mapping->host->i_ino;
+    __entry->index = folio->index;
+    __entry->order = folio_order(folio);
+  ),
+
+  TP_printk("ino %lx pfn=0x%lx ofs=%lu order=%u",
+    __entry->i_ino,
+    __entry->pfn,
+    __entry->index << PAGE_SHIFT,
+    __entry->order)
+);
+
+DEFINE_EVENT(paygo_operations, paygo_inc,
+  TP_PROTO(struct folio *folio),
+  TP_ARGS(folio)
+  );
+
+DEFINE_EVENT(paygo_operations, paygo_dec,
+  TP_PROTO(struct folio *folio),
+  TP_ARGS(folio)
+  );
+
+DEFINE_EVENT(paygo_operations, paygo_read,
+  TP_PROTO(struct folio *folio),
+  TP_ARGS(folio)
+  );
+#endif /* _TRACE_PAYGO_H */
+
+/* This part must be outside protection */
+#include <trace/define_trace.h>
diff --git a/mm/filemap.c b/mm/filemap.c
index 0e20a8d6d..6f619d8f8 100644
--- a/mm/filemap.c
+++ b/mm/filemap.c
@@ -48,6 +48,7 @@
 
 #define CREATE_TRACE_POINTS
 #include <trace/events/filemap.h>
+#include <trace/events/paygo.h>
 
 /*
  * FIXME: remove all knowledge of the buffer layer from the core VM
